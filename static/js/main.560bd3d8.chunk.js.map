{"version":3,"sources":["giphy.tsx","container.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["gf","GiphyFetch","Giphy","size","React","useState","gif","setGif","useAsync","a","search","sort","limit","data","width","GIFContainer","containerRef","useRef","containerSize","setContainerSize","handleResize","useCallback","current","offsetWidth","useEffect","window","addEventListener","ref","style","height","App","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAMMA,EAAK,IAAIC,aAAW,oCAObC,EAAyB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EAC5BC,IAAMC,SAAsB,MADA,mBAC3CC,EAD2C,KACtCC,EADsC,KAWlD,OARAC,YAAQ,sBAAC,8BAAAC,EAAA,sEACgBT,EAAGU,OAVT,WAU8B,CAC7CC,KAAM,WACNC,MAAO,IAHF,gBACCC,EADD,EACCA,KAIRN,EAAOM,EAAK,IALL,2CAMN,IAEEP,EAEE,cAAC,MAAD,CAAKA,IAAKA,EAAKQ,MAAOX,IAFZ,mDCrBNY,EAAyB,WACpC,IAAMC,EAAeZ,IAAMa,OAAuB,MADR,EAEAb,IAAMC,SAAS,KAFf,mBAEnCa,EAFmC,KAEpBC,EAFoB,KAIpCC,EAAehB,IAAMiB,aAAY,WAAO,IAAD,EACrCP,EAAK,UAAGE,EAAaM,eAAhB,aAAG,EAAsBC,YACpCT,GAASK,EAAiBL,KACzB,CAACE,IAOJ,OALAZ,IAAMoB,WAAU,WACdJ,IACAK,OAAOC,iBAAiB,SAAUN,KACjC,CAACA,IAGF,qBAAKO,IAAKX,EAAcY,MAAO,CAAEC,OAAQ,QAAzC,SACE,cAAC,EAAD,CAAO1B,KAAMe,OCPJY,MATf,WACE,OACE,sBAAKF,MAAO,CAAEG,OAAQ,SAAUjB,MAAO,OAAvC,UACE,gDACA,cAAC,EAAD,QCOSkB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.560bd3d8.chunk.js","sourcesContent":["import React from \"react\";\nimport { IGif } from \"@giphy/js-types\";\nimport { Gif } from \"@giphy/react-components\";\nimport { GiphyFetch } from \"@giphy/js-fetch-api\";\nimport { useAsync } from \"react-async-hook\";\n\nconst gf = new GiphyFetch(\"Nj6LZljJuQpa0hgKv8EgPADpxhgWawkH\");\nconst trendingWord = \"TRENDING\";\n\ntype Props = {\n  size: number;\n};\n\nexport const Giphy: React.FC<Props> = ({ size }) => {\n  const [gif, setGif] = React.useState<IGif | null>(null);\n\n  useAsync(async () => {\n    const { data } = await gf.search(trendingWord, {\n      sort: \"relevant\",\n      limit: 1,\n    });\n    setGif(data[0]);\n  }, []);\n\n  if (!gif) return <span>loading gif...</span>;\n\n  return <Gif gif={gif} width={size} />;\n};\n","import React from \"react\";\nimport { Giphy } from \"./giphy\";\n\nexport const GIFContainer: React.FC = () => {\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const [containerSize, setContainerSize] = React.useState(100);\n\n  const handleResize = React.useCallback(() => {\n    const width = containerRef.current?.offsetWidth;\n    width && setContainerSize(width);\n  }, [containerRef]);\n\n  React.useEffect(() => {\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n  }, [handleResize]);\n\n  return (\n    <div ref={containerRef} style={{ height: \"50vh\" }}>\n      <Giphy size={containerSize} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { GIFContainer } from \"./container\";\n\nfunction App() {\n  return (\n    <div style={{ margin: \"0 auto\", width: \"80%\" }}>\n      <h1>GIF of the day</h1>\n      <GIFContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}